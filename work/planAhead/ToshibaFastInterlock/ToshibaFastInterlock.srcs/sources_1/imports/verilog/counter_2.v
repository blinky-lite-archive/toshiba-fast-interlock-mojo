/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module counter_2 (
    input clk,
    input rst,
    input reflPowTrip,
    input arcDetTrip,
    input bbReset,
    input aftArcTrip,
    output reg [7:0] count
  );
  
  
  
  wire [1-1:0] M_reflPowTripEdge_out;
  reg [1-1:0] M_reflPowTripEdge_in;
  edge_detector_4 reflPowTripEdge (
    .clk(clk),
    .in(M_reflPowTripEdge_in),
    .out(M_reflPowTripEdge_out)
  );
  wire [1-1:0] M_bbResetEdge_out;
  reg [1-1:0] M_bbResetEdge_in;
  edge_detector_4 bbResetEdge (
    .clk(clk),
    .in(M_bbResetEdge_in),
    .out(M_bbResetEdge_out)
  );
  wire [1-1:0] M_reflPowTripSync_out;
  reg [1-1:0] M_reflPowTripSync_in;
  pipeline_6 reflPowTripSync (
    .clk(clk),
    .in(M_reflPowTripSync_in),
    .out(M_reflPowTripSync_out)
  );
  wire [1-1:0] M_arcDetTripSync_out;
  reg [1-1:0] M_arcDetTripSync_in;
  pipeline_6 arcDetTripSync (
    .clk(clk),
    .in(M_arcDetTripSync_in),
    .out(M_arcDetTripSync_out)
  );
  wire [1-1:0] M_bbResetSync_out;
  reg [1-1:0] M_bbResetSync_in;
  pipeline_6 bbResetSync (
    .clk(clk),
    .in(M_bbResetSync_in),
    .out(M_bbResetSync_out)
  );
  wire [1-1:0] M_aftArcTripSync_out;
  reg [1-1:0] M_aftArcTripSync_in;
  pipeline_6 aftArcTripSync (
    .clk(clk),
    .in(M_aftArcTripSync_in),
    .out(M_aftArcTripSync_out)
  );
  reg [7:0] M_ctr_d, M_ctr_q = 1'h0;
  
  always @* begin
    M_ctr_d = M_ctr_q;
    
    M_reflPowTripSync_in = reflPowTrip;
    M_arcDetTripSync_in = arcDetTrip;
    M_bbResetSync_in = bbReset;
    M_aftArcTripSync_in = aftArcTrip;
    M_reflPowTripEdge_in = M_reflPowTripSync_out;
    M_bbResetEdge_in = M_bbResetSync_out;
    count = M_ctr_q;
    if ((M_reflPowTripEdge_out || M_reflPowTripSync_out) && (M_ctr_q < 1'h1)) begin
      M_ctr_d = 1'h1;
    end
    if (M_arcDetTripSync_out && (M_ctr_q < 1'h1)) begin
      M_ctr_d = 2'h2;
    end
    if (!M_aftArcTripSync_out && (M_ctr_q < 1'h1)) begin
      M_ctr_d = 3'h4;
    end
    if (M_bbResetEdge_out) begin
      M_ctr_d = 1'h0;
    end
  end
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_ctr_q <= 1'h0;
    end else begin
      M_ctr_q <= M_ctr_d;
    end
  end
  
endmodule
