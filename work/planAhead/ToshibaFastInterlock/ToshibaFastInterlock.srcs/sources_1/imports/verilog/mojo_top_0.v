/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module mojo_top_0 (
    input clk,
    input rst_n,
    output reg [7:0] led,
    input cclk,
    output reg spi_miso,
    input spi_ss,
    input spi_mosi,
    input spi_sck,
    output reg [3:0] spi_channel,
    input avr_tx,
    output reg avr_rx,
    input avr_rx_busy,
    input reflPowTrip,
    input arcDetTrip,
    input bbReset,
    input bbPinSwitch,
    output reg tripFlag,
    output reg tripType,
    output reg arcTripLed,
    output reg reflTripLed,
    output reg pinSwitch,
    output reg pinSwitchLed
  );
  
  
  
  reg rst;
  
  wire [1-1:0] M_reset_cond_out;
  reg [1-1:0] M_reset_cond_in;
  reset_conditioner_1 reset_cond (
    .clk(clk),
    .in(M_reset_cond_in),
    .out(M_reset_cond_out)
  );
  wire [8-1:0] M_counter_count;
  reg [1-1:0] M_counter_reflPowTrip;
  reg [1-1:0] M_counter_arcDetTrip;
  reg [1-1:0] M_counter_bbReset;
  counter_2 counter (
    .clk(clk),
    .rst(rst),
    .reflPowTrip(M_counter_reflPowTrip),
    .arcDetTrip(M_counter_arcDetTrip),
    .bbReset(M_counter_bbReset),
    .count(M_counter_count)
  );
  wire [8-1:0] M_pinSwitchMod_pinSwitchData;
  reg [1-1:0] M_pinSwitchMod_bbPinSwitch;
  reg [8-1:0] M_pinSwitchMod_tripData;
  pinSwitch_3 pinSwitchMod (
    .clk(clk),
    .rst(rst),
    .bbPinSwitch(M_pinSwitchMod_bbPinSwitch),
    .tripData(M_pinSwitchMod_tripData),
    .pinSwitchData(M_pinSwitchMod_pinSwitchData)
  );
  
  always @* begin
    M_reset_cond_in = ~rst_n;
    rst = M_reset_cond_out;
    spi_miso = 1'bz;
    spi_channel = 4'bzzzz;
    avr_rx = 1'bz;
    M_counter_reflPowTrip = reflPowTrip;
    M_counter_arcDetTrip = arcDetTrip;
    M_counter_bbReset = bbReset;
    M_pinSwitchMod_bbPinSwitch = bbPinSwitch;
    M_pinSwitchMod_tripData = M_counter_count;
    
    case (M_pinSwitchMod_pinSwitchData)
      1'h0: begin
        pinSwitchLed = 1'h0;
        pinSwitch = 1'h0;
      end
      1'h1: begin
        pinSwitchLed = 1'h1;
        pinSwitch = 1'h1;
      end
      default: begin
        pinSwitchLed = 1'h0;
        pinSwitch = 1'h0;
      end
    endcase
    
    case (M_counter_count)
      1'h0: begin
        tripFlag = 1'h0;
        tripType = 1'h0;
        arcTripLed = 1'h0;
        reflTripLed = 1'h0;
      end
      1'h1: begin
        tripFlag = 1'h1;
        tripType = 1'h0;
        arcTripLed = 1'h0;
        reflTripLed = 1'h1;
      end
      2'h2: begin
        tripFlag = 1'h1;
        tripType = 1'h1;
        arcTripLed = 1'h1;
        reflTripLed = 1'h0;
      end
      default: begin
        tripFlag = 1'h0;
        tripType = 1'h0;
        arcTripLed = 1'h0;
        reflTripLed = 1'h0;
      end
    endcase
    led = M_counter_count;
  end
endmodule
