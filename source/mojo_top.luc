module mojo_top (
    input clk,              // 50MHz clock
    input rst_n,            // reset button (active low)
    output led [8],         // 8 user controllable LEDs
    input cclk,             // configuration clock, AVR ready when high
    output spi_miso,        // AVR SPI MISO
    input spi_ss,           // AVR SPI Slave Select
    input spi_mosi,         // AVR SPI MOSI
    input spi_sck,          // AVR SPI Clock
    output spi_channel [4], // AVR general purpose pins (used by default to select ADC channel)
    input avr_tx,           // AVR TX (FPGA RX)
    output avr_rx,          // AVR RX (FPGA TX)
    input avr_rx_busy,       // AVR RX buffer full
    input reflPowTrip,
    input arcDetTrip,
    input aftArcTrip,
    input bbReset,
    input bbPinSwitch,
    output tripFlag,
    output tripType,
    output arcTripType,
    output arcTripLed,
    output aftArcLed,
    output reflTripLed,
    output pinSwitch,
    output pinSwitchLed
) {
  
  sig rst;                  // reset signal
  
  .clk(clk) {
    // The reset conditioner is used to synchronize the reset signal to the FPGA
    // clock. This ensures the entire FPGA comes out of reset at the same time.
    reset_conditioner reset_cond;
     
    .rst(rst){
      counter counter;
      pinSwitch pinSwitchMod;
    }
  }
  
  always {
    reset_cond.in = ~rst_n; // input raw inverted reset signal
    rst = reset_cond.out;   // conditioned reset
    
    spi_miso    = bz;       // not using SPI
    spi_channel = bzzzz;    // not using flags
    avr_rx      = bz;       // not using serial port
    
    counter.reflPowTrip =  reflPowTrip;
    counter.arcDetTrip  =  arcDetTrip;
    counter.aftArcTrip  =  aftArcTrip;
    counter.bbReset     =  bbReset;
    pinSwitchMod.bbPinSwitch = bbPinSwitch;
    pinSwitchMod.tripData = counter.count;
    
    case(pinSwitchMod.pinSwitchData) {
      0: pinSwitchLed = 0; pinSwitch = 0;
      1: pinSwitchLed = 1; pinSwitch = 1;
      default: pinSwitchLed = 0; pinSwitch = 0;
    }
    
    case (counter.count) {
      0: tripFlag = 0; tripType = 0; arcTripLed = 0; reflTripLed = 0; aftArcLed = 0; arcTripType = 0;
      1: tripFlag = 1; tripType = 0; arcTripLed = 0; reflTripLed = 1; aftArcLed = 0; arcTripType = 0;
      2: tripFlag = 1; tripType = 1; arcTripLed = 1; reflTripLed = 0; aftArcLed = 0; arcTripType = 0;
      4: tripFlag = 1; tripType = 1; arcTripLed = 0; reflTripLed = 0; aftArcLed = 1; arcTripType = 1;
     default: tripFlag = 0; tripType = 0; arcTripLed = 0; reflTripLed = 0; aftArcLed = 0; arcTripType = 0;
    }
    led = counter.count;
  }
}